#########################################################################
########## 4.1 Text Classification ######################################
#######################################################################

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics import classification_report
from sklearn import svm

#preparing data for svm model
# train & test
training_corpus = [
                   ('I am exhausted of this work.', 'Class_B'),
                   ("I can't cooperate with this", 'Class_B'),
                   ('He is my badest enemy!', 'Class_B'),
                   ('My management is poor.', 'Class_B'),
                   ('I love this burger.', 'Class_A'),
                   ('This is an brilliant place!', 'Class_A'),
                   ('I feel very good about these dates.', 'Class_A'),
                   ('This is my best work.', 'Class_A'),
                   ("What an awesome view", 'Class_A'),
                   ('I do not like this dish', 'Class_B')]


test_corpus = [
                ("I am not feeling well today.", 'Class_B'),
                ("I feel brilliant!", 'Class_A'),
                ('Gary is a friend of mine.', 'Class_A'),
                ("I can't believe I'm doing this.", 'Class_B'),
                ('The date was good.', 'Class_A'), ('I do not enjoy my job', 'Class_B')]


train_data=[]
train_labels=[]

for row in training_corpus:
    train_data.append(row[0])
    train_labels.append(row[1])

test_data=[]
test_labels=[]

for row in test_corpus:
    test_data.append(row[0])
    test_labels.append(row[1])

#create feature vector

vectorizer=TfidfVectorizer()

#train the feature vectors
train_vectors=vectorizer.fit_transform(test_data)

#apply on test data

test_vector=vectorizer.transform(test_data)

#perform classification with svm

model=svm.SVC(kernel='linear')

model.fit(train_vectors,train_labels)

prediction=model.predict(test_vector)
print(prediction)
